#!/bin/bash
#
# Setup some defaults
# Steps specific to init folder & depending on OS type

UNAME=$( uname )

info "'dot defaults' is an alias to this step" " " true

if [ -n "$indent_level" ]; then
	original_level=$indent_level
else
	indent_level=2
fi

case $UNAME in

	Darwin)

		# SYSTEM

		if ask "Set OS defaults ?" N; then
			((indent_level++))

			ask "Apply SSD specific tweaks ?" N && \
				SSD_SPECIFIC=true

			ask "Disable 'natural' scrolling ?" N && \
				DISABLE_NATURAL_SCROLLING=true

			[ "$(whoami)" != "root" ] && \
				warn "Administrator access may be required" " "
				# sudo -v

			info "Executing init/.osx" "..." true

			if source $DOTFILES_DIR/init/.osx; then
				warn "Some changes may require a logout/restart to take effect" " "
				# Kill affected applications
				# if ask "Kill affected applications now ? Terminal will be closed." N; then
				# 	for app in "Activity Monitor" "Address Book" "Calendar" "Contacts" "cfprefsd" \
				# 		"Dock" "Finder" "Mail" "Messages" "Safari" "SizeUp" "SystemUIServer" \
				# 		"Terminal" "Transmission" "Twitter" "iCal"; do
				# 		killall "${app}" > /dev/null 2>&1
				# 	done
				# fi
			else
				fail "$DOTFILES/init/.osx" "Failed"
				step_failed=true
			fi
		else
			((indent_level++))
		fi

		((indent_level--))

		# SUBLIME TEXT
		# TODO check for current symlink
		if ask "Link Sublime Text preferences ?" Y; then

			st_prefix=~/Library/Application\ Support/Sublime\ Text
			st_suffix=/Packages/User/Preferences.sublime-settings

			for f in "$st_prefix"*"$st_suffix"; do
				if [ -f "$f" ]; then
					rm "$f" # -f ?
					ln -s "$DOTFILES_DIR/init/Preferences.sublime-settings" "$f"

					st_success=true
					st_version=${f#$st_prefix}
					success "Sublime Text ${st_version:1:1}" "Symlinked Preferences.sublime-settings"
				fi
			done

			if [ ! -n "$st_success" ]; then
				fail "No application found" "$st_prefix*$st_suffix"
				step_failed=true
			fi
		fi

		;;

	*)

		warn "No configuration available" "$UNAME"

		;;

esac

# echo ''
indent_level=$original_level

[ "$step_failed" = true ] && return 1

return
