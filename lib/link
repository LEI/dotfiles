#!/bin/bash
#
# Create a symbolic link
# Check the file and prompt if necessary
# Uses lib/print

lib=$DOTFILES/lib
source $lib/ask

# Check destination and do symlink
link () {
	local src=$1
	local dst=$2

	local skip remove

	# If it is a broken symlink
	if [ -h ${dst} ] && [ ! -e ${dst} ]; then
		fail "${dst#$TARGET_DIR/}" "Removing broken link"
		remove=true
	fi

	# If it is a symbolic link
	if [ -h ${dst} ]; then
		current_src="$(readlink $dst)"
		if [ ${current_src} = ${src} ]; then
			# Already linked to this file
			success "${dst#$TARGET_DIR/}" "Already linked to ~${current_src#$HOME}" true
			skip=true
		else
			# Linked to another file
			warn "${dst#$TARGET_DIR/}" "Already linked to ~${current_src#$HOME}"  true
			if ask "Remove ${dst#$TARGET_DIR/} current symlink ?" Y; then
				remove=true
			else
				skip=true
			fi
		fi
	# If it is a file
	elif [ -f ${dst} ]; then
		warn "${dst#$TARGET_DIR/}" "File already exists ~${dst#$HOME}"
		if ask "Remove actual ${dst#$TARGET_DIR/} file ?" Y; then
			remove=true
		else
			skip=true
		fi
	# If it is a directory
	elif [ -d ${dst} ]; then
		warn "${dst#$TARGET_DIR/}" "Directory already exists ~${dst#$HOME}"
		if ask "Remove actual ${dst#$TARGET_DIR/} directory ?" Y; then
			remove=true
		else
			skip=true
		fi
	fi

	# Check if the file has to be removed
	if [ "$remove" = true ]; then
		rm ${dst}
	fi

	# Check if the symbolic link can be created
	if [ "$skip" != true ]; then

		if [ "$debug" != true ]; then
			ln -s ${src} ${dst}
		fi
		# ~${src#$HOME}
		success "${dst#$TARGET_DIR/}" "Linked to ~${dst#$HOME}"
	fi
}

unlink () {
	local dst=$1

	if [ ! -e "$dst" ]; then
		success "${dst#$TARGET_DIR/}" "Not found" true
	elif [ -L "$dst" ] && \
		rm $dst; then
		success "${dst#$TARGET_DIR/}" "Unlinked"
	elif [ -f "$dst" ]; then
		warn "${dst#$TARGET_DIR/}" "Is a file"
	elif [ -d "$dst" ]; then
		warn "${dst#$TARGET_DIR/}" "Is a directory"
	else
		fail "${dst#$TARGET_DIR/}" "Cannot be unlinked"
	fi
}

link_file () {
	local src=$1
	local name=${src#$DOTFILES_DIR/}

	link $src $TARGET_DIR/$name
}

unlink_file () {
	local src=$1
	local name=${src#$DOTFILES_DIR/}

	unlink $TARGET_DIR/$name
}

link_dotfile () {
	local src=$1
	local name

	if [ ${src: -1} = "." ]; then
		name=.$(basename ${src%?})
		link $src $TARGET_DIR/$name
	fi
}

unlink_dotfile () {
	local src=$1
	local name

	if [ ${src: -1} = "." ]; then
		name=.$(basename ${src%?})
		unlink $TARGET_DIR/$name
	fi
}
