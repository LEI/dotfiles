#!/bin/bash
#
# File manipulations
#
# Copy with rsync

lib=$DOTFILES_DIR/lib
source $lib/join

do_rsync () {
	local src=$1
	local dst=$2
	shift; shift;
	local ignore_array=("$@")

	if [ "$src" = '' -o "$dst" = '' ]
	then
		echo "Argument error" > /dev/stderr
		exit 1
	fi

	local ignore_cmd=""
	if [ "${#ignore_array[@]}" != "0" ]; then
		ignore_cmd="--exclude \""`join "\" --exclude \"" ${ignore_array[@]}`"\""
	fi

	silent rsync ${ignore_cmd} -avh --no-perms --human-readable $src $dst "&"
}

copy () {
	local src=$1
	shift
	local ignore_array=("$@")

	((indent_level++))
	if [ -f "$src" -o -d "$src" ] && \
		do_rsync $src $TARGET_DIR ${ignore_array[@]}; then
		# ^ > /dev/null
		success "$src" "Copied to ~${TARGET_DIR#$HOME}"
	else
		fail "$src" "Failed to be copied"
	fi
	((indent_level--))
}

remove () {
	local src=$1
	# Find target
	local dst=$TARGET_DIR/${src#$DOTFILES_DIR/}

	((indent_level++))
	if [ ! -e "$dst" ]; then
		success "${dst#$HOME/}" "Not found" true
	# elif [ -d "$dst" ]; then
	# 	info "${dst#$HOME/}" "Directory ignored" true
	elif [ -f "$dst" -o -d "$dst" -o -L "$dst" ] && \
		rm -r $dst; then
		#      ^ 2> /dev/null ?
		success "${dst#$HOME/}" "Removed"
	else
		fail "${dst#$HOME/}" "Cannot be removed"
	fi
	((indent_level--))
}

check_file () {
	local file=$1

	if [ -f $file ]; then
		return 1
	else
		return 0
	fi
}

source_file () {
	local file=$1

	if [ -f $file ] && source "$file"; then
		#success "Operation successfull !"
		return 1
	else
		#fail "Command failed !"
		return 0
	fi
}
