#!/bin/bash
#
# TODOCS Create a symbolic link for each file in the directory
# $1 Path absolutely relative
# $3 Function executed for each file
# $2 Pattern to match file name

source $lib/find

# Call the function on each file
dir () {

	local dir=$1;
	local callback=$2;
	shift; shift
	#local pattern
	# Take the rest of the arguments as an array
	local ignore_array=("$@")

	[ -n "$dir" ] && dir=/$dir
	local src=$DOTFILES_DIR$dir
	local dst=$TARGET_DIR$dir

	# Construct command
	local find_command=$(find_cmd $src ${ignore_array[@]})
	local skip

	indent_level=2

	# Confirm action
	action=$(echo "${callback//_/ }" | perl -nE 'say ucfirst')
	if ask "$action ~${dst#$HOME} ?" Y; then
		indent_level=3
	else
		skipped "~${dst#$HOME}" " "
		indent_level=1
		return
	fi

	# TODO : Automatic ignore <file>. pattern
	# Check destination only for regular files
	if [ ! -d ${dst} -a ${callback} = "link_file" ]; then
		mkdir $dst && \
		success "Destination directoy was created"
	fi

	# Check directory
	if [ -d ${src} ]; then

		# Loop on each file and check ignore list
		paths=$($find_command)

		for file in $paths; do

			# Stop this iteration if it's the same directory
			if [ "${file##*/}" = "${dir#/}" ]; then
				continue
			fi

			# Do action
			eval $callback $file

		done

		indent_level=2

		success "~${dst#$HOME}" " "

	else

		indent_level=2

		fail "Failed" "~${src#$HOME} not found"
	fi

	indent_level=1
}
